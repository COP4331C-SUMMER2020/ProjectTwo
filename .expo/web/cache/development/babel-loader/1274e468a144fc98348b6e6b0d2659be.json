{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abocr\\\\Documents\\\\School\\\\Processes\\\\ProjectTwo\\\\web\\\\project2\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport useFormValidation from \"./useFormValidation\";\nimport validateAuth from \"./validateAuth\";\nvar INITIAL_STATE = {\n  email: \"\",\n  password: \"\"\n};\n\nfunction Login() {\n  var _useFormValidation = useFormValidation(INITIAL_STATE, validateAuth),\n      handleSubmit = _useFormValidation.handleSubmit,\n      handleChange = _useFormValidation.handleChange,\n      handleBlur = _useFormValidation.handleBlur,\n      values = _useFormValidation.values,\n      errors = _useFormValidation.errors,\n      isSubmitting = _useFormValidation.isSubmitting;\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Login Test\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(\"input\", {\n    onChange: handleChange,\n    onBlur: handleBlur,\n    name: \"loginemail\",\n    value: values.email,\n    className: errors.email && \"error-input\",\n    autoComplete: \"off\",\n    placeholder: \"Your email address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), errors.email && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 26\n    }\n  }, errors.email), React.createElement(\"input\", {\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.password,\n    className: errors.password && \"error-input\",\n    name: \"loginpassword\",\n    type: \"password\",\n    placeholder: \"Choose a safe password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), errors.password && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, errors.password), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(\"button\", {\n    disabled: isSubmitting,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n}\n\nfunction Register() {\n  var _useFormValidation2 = useFormValidation(INITIAL_STATE, validateAuth),\n      handleSubmit = _useFormValidation2.handleSubmit,\n      handleChange = _useFormValidation2.handleChange,\n      handleBlur = _useFormValidation2.handleBlur,\n      values = _useFormValidation2.values,\n      errors = _useFormValidation2.errors,\n      isSubmitting = _useFormValidation2.isSubmitting;\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Register Test\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, React.createElement(\"input\", {\n    onChange: handleChange,\n    onBlur: handleBlur,\n    name: \"registeremail\",\n    value: values.email,\n    className: errors.email && \"error-input\",\n    autoComplete: \"off\",\n    placeholder: \"Your email address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), errors.email && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 26\n    }\n  }, errors.email), React.createElement(\"input\", {\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.password,\n    className: errors.password && \"error-input\",\n    name: \"registerpassword\",\n    type: \"password\",\n    placeholder: \"Choose a safe password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), errors.password && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, errors.password), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, React.createElement(\"button\", {\n    disabled: isSubmitting,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n}\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(Login, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 17\n  }\n}), rootElement);\nReactDOM.render(React.createElement(Register, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["C:/Users/abocr/Documents/School/Processes/ProjectTwo/web/project2/src/index.js"],"names":["React","ReactDOM","useFormValidation","validateAuth","INITIAL_STATE","email","password","Login","handleSubmit","handleChange","handleBlur","values","errors","isSubmitting","Register","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./styles.css\";\r\n\r\nimport useFormValidation from \"./useFormValidation\";\r\nimport validateAuth from \"./validateAuth\";\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  password: \"\"\r\n};\r\nfunction Login() {\r\n  const {\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    errors,\r\n    isSubmitting\r\n  } = useFormValidation(INITIAL_STATE, validateAuth);\r\n  // const [email, setEmail] = React.useState(\"\");\r\n  // const [password, setPassword] = React.useState(\"\");\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Login Test</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          name=\"loginemail\"\r\n          value={values.email}\r\n          className={errors.email && \"error-input\"}\r\n          autoComplete=\"off\"\r\n          placeholder=\"Your email address\"\r\n        />\r\n        {errors.email && <p className=\"error-text\">{errors.email}</p>}\r\n        <input\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          value={values.password}\r\n          className={errors.password && \"error-input\"}\r\n          name=\"loginpassword\"\r\n          type=\"password\"\r\n          placeholder=\"Choose a safe password\"\r\n        />\r\n        {errors.password && <p className=\"error-text\">{errors.password}</p>}\r\n        <div>\r\n          <button disabled={isSubmitting} type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Register() {\r\n  const {\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    errors,\r\n    isSubmitting\r\n  } = useFormValidation(INITIAL_STATE, validateAuth);\r\n  // const [email, setEmail] = React.useState(\"\");\r\n  // const [password, setPassword] = React.useState(\"\");\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Register Test</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          name=\"registeremail\"\r\n          value={values.email}\r\n          className={errors.email && \"error-input\"}\r\n          autoComplete=\"off\"\r\n          placeholder=\"Your email address\"\r\n        />\r\n        {errors.email && <p className=\"error-text\">{errors.email}</p>}\r\n        <input\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          value={values.password}\r\n          className={errors.password && \"error-input\"}\r\n          name=\"registerpassword\"\r\n          type=\"password\"\r\n          placeholder=\"Choose a safe password\"\r\n        />\r\n        {errors.password && <p className=\"error-text\">{errors.password}</p>}\r\n        <div>\r\n          <button disabled={isSubmitting} type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<Login />, rootElement);\r\nReactDOM.render(<Register />, rootElement);"]},"metadata":{},"sourceType":"module"}