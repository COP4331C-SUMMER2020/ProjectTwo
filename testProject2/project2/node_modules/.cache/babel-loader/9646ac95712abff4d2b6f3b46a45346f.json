{"ast":null,"code":"//\n// Method to normalize size of fonts across devices\n//\n// Some code taken from https://jsfiddle.net/97ty7yjk/ &\n// https://stackoverflow.com/questions/34837342/font-size-on-iphone-6s-plus\n//\n// author: @xiaoneng\n// date: 14/10/2016\n// version: 03\n//\nimport { PixelRatio, Dimensions } from 'react-native';\nconst pixelRatio = PixelRatio.get();\nconst deviceHeight = Dimensions.get('window').height;\nconst deviceWidth = Dimensions.get('window').width; // -- Testing Only --\n// const fontScale = PixelRatio.getFontScale();\n// const layoutSize = PixelRatio.getPixelSizeForLayoutSize(14);\n// console.log('normalizeText getPR ->', pixelRatio);\n// console.log('normalizeText getFS ->', fontScale);\n// console.log('normalizeText getDH ->', deviceHeight);\n// console.log('normalizeText getDW ->', deviceWidth);\n// console.log('normalizeText getPSFLS ->', layoutSize);\n\nconst normalize = size => {\n  if (pixelRatio >= 2 && pixelRatio < 3) {\n    // iphone 5s and older Androids\n    if (deviceWidth < 360) {\n      return size * 0.95;\n    } // iphone 5\n\n\n    if (deviceHeight < 667) {\n      return size; // iphone 6-6s\n    }\n\n    if (deviceHeight >= 667 && deviceHeight <= 735) {\n      return size * 1.15;\n    } // older phablets\n\n\n    return size * 1.25;\n  }\n\n  if (pixelRatio >= 3 && pixelRatio < 3.5) {\n    // catch Android font scaling on small machines\n    // where pixel ratio / font scale ratio => 3:3\n    if (deviceWidth <= 360) {\n      return size;\n    } // Catch other weird android width sizings\n\n\n    if (deviceHeight < 667) {\n      return size * 1.15; // catch in-between size Androids and scale font up\n      // a tad but not too much\n    }\n\n    if (deviceHeight >= 667 && deviceHeight <= 735) {\n      return size * 1.2;\n    } // catch larger devices\n    // ie iphone 6s plus / 7 plus / mi note 等等\n\n\n    return size * 1.27;\n  }\n\n  if (pixelRatio >= 3.5) {\n    // catch Android font scaling on small machines\n    // where pixel ratio / font scale ratio => 3:3\n    if (deviceWidth <= 360) {\n      return size; // Catch other smaller android height sizings\n    }\n\n    if (deviceHeight < 667) {\n      return size * 1.2; // catch in-between size Androids and scale font up\n      // a tad but not too much\n    }\n\n    if (deviceHeight >= 667 && deviceHeight <= 735) {\n      return size * 1.25;\n    } // catch larger phablet devices\n\n\n    return size * 1.4;\n  }\n\n  return size;\n};\n\nexport default normalize;","map":{"version":3,"sources":["/mnt/c/Users/tyler/Desktop/Programfiles/JuniorDesign/project2/node_modules/react-native-elements/src/helpers/normalizeText.js"],"names":["PixelRatio","Dimensions","pixelRatio","get","deviceHeight","height","deviceWidth","width","normalize","size"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,cAAvC;AAEA,MAAMC,UAAU,GAAGF,UAAU,CAACG,GAAX,EAAnB;AACA,MAAMC,YAAY,GAAGH,UAAU,CAACE,GAAX,CAAe,QAAf,EAAyBE,MAA9C;AACA,MAAMC,WAAW,GAAGL,UAAU,CAACE,GAAX,CAAe,QAAf,EAAyBI,KAA7C,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAIC,IAAD,IAAU;AAC1B,MAAIP,UAAU,IAAI,CAAd,IAAmBA,UAAU,GAAG,CAApC,EAAuC;AACrC;AACA,QAAII,WAAW,GAAG,GAAlB,EAAuB;AACrB,aAAOG,IAAI,GAAG,IAAd;AACD,KAJoC,CAMrC;;;AACA,QAAIL,YAAY,GAAG,GAAnB,EAAwB;AACtB,aAAOK,IAAP,CADsB,CAEtB;AACD;;AAED,QAAIL,YAAY,IAAI,GAAhB,IAAuBA,YAAY,IAAI,GAA3C,EAAgD;AAC9C,aAAOK,IAAI,GAAG,IAAd;AACD,KAdoC,CAerC;;;AACA,WAAOA,IAAI,GAAG,IAAd;AACD;;AAED,MAAIP,UAAU,IAAI,CAAd,IAAmBA,UAAU,GAAG,GAApC,EAAyC;AACvC;AACA;AACA,QAAII,WAAW,IAAI,GAAnB,EAAwB;AACtB,aAAOG,IAAP;AACD,KALsC,CAOvC;;;AACA,QAAIL,YAAY,GAAG,GAAnB,EAAwB;AACtB,aAAOK,IAAI,GAAG,IAAd,CADsB,CAEtB;AACA;AACD;;AAED,QAAIL,YAAY,IAAI,GAAhB,IAAuBA,YAAY,IAAI,GAA3C,EAAgD;AAC9C,aAAOK,IAAI,GAAG,GAAd;AACD,KAhBsC,CAkBvC;AACA;;;AACA,WAAOA,IAAI,GAAG,IAAd;AACD;;AAED,MAAIP,UAAU,IAAI,GAAlB,EAAuB;AACrB;AACA;AACA,QAAII,WAAW,IAAI,GAAnB,EAAwB;AACtB,aAAOG,IAAP,CADsB,CAEtB;AACD;;AAED,QAAIL,YAAY,GAAG,GAAnB,EAAwB;AACtB,aAAOK,IAAI,GAAG,GAAd,CADsB,CAEtB;AACA;AACD;;AAED,QAAIL,YAAY,IAAI,GAAhB,IAAuBA,YAAY,IAAI,GAA3C,EAAgD;AAC9C,aAAOK,IAAI,GAAG,IAAd;AACD,KAhBoB,CAkBrB;;;AACA,WAAOA,IAAI,GAAG,GAAd;AACD;;AAED,SAAOA,IAAP;AACD,CAlED;;AAoEA,eAAeD,SAAf","sourcesContent":["//\n// Method to normalize size of fonts across devices\n//\n// Some code taken from https://jsfiddle.net/97ty7yjk/ &\n// https://stackoverflow.com/questions/34837342/font-size-on-iphone-6s-plus\n//\n// author: @xiaoneng\n// date: 14/10/2016\n// version: 03\n//\n\nimport { PixelRatio, Dimensions } from 'react-native';\n\nconst pixelRatio = PixelRatio.get();\nconst deviceHeight = Dimensions.get('window').height;\nconst deviceWidth = Dimensions.get('window').width;\n\n// -- Testing Only --\n// const fontScale = PixelRatio.getFontScale();\n// const layoutSize = PixelRatio.getPixelSizeForLayoutSize(14);\n// console.log('normalizeText getPR ->', pixelRatio);\n// console.log('normalizeText getFS ->', fontScale);\n// console.log('normalizeText getDH ->', deviceHeight);\n// console.log('normalizeText getDW ->', deviceWidth);\n// console.log('normalizeText getPSFLS ->', layoutSize);\n\nconst normalize = (size) => {\n  if (pixelRatio >= 2 && pixelRatio < 3) {\n    // iphone 5s and older Androids\n    if (deviceWidth < 360) {\n      return size * 0.95;\n    }\n\n    // iphone 5\n    if (deviceHeight < 667) {\n      return size;\n      // iphone 6-6s\n    }\n\n    if (deviceHeight >= 667 && deviceHeight <= 735) {\n      return size * 1.15;\n    }\n    // older phablets\n    return size * 1.25;\n  }\n\n  if (pixelRatio >= 3 && pixelRatio < 3.5) {\n    // catch Android font scaling on small machines\n    // where pixel ratio / font scale ratio => 3:3\n    if (deviceWidth <= 360) {\n      return size;\n    }\n\n    // Catch other weird android width sizings\n    if (deviceHeight < 667) {\n      return size * 1.15;\n      // catch in-between size Androids and scale font up\n      // a tad but not too much\n    }\n\n    if (deviceHeight >= 667 && deviceHeight <= 735) {\n      return size * 1.2;\n    }\n\n    // catch larger devices\n    // ie iphone 6s plus / 7 plus / mi note 等等\n    return size * 1.27;\n  }\n\n  if (pixelRatio >= 3.5) {\n    // catch Android font scaling on small machines\n    // where pixel ratio / font scale ratio => 3:3\n    if (deviceWidth <= 360) {\n      return size;\n      // Catch other smaller android height sizings\n    }\n\n    if (deviceHeight < 667) {\n      return size * 1.2;\n      // catch in-between size Androids and scale font up\n      // a tad but not too much\n    }\n\n    if (deviceHeight >= 667 && deviceHeight <= 735) {\n      return size * 1.25;\n    }\n\n    // catch larger phablet devices\n    return size * 1.4;\n  }\n\n  return size;\n};\n\nexport default normalize;\n"]},"metadata":{},"sourceType":"module"}